{"version":3,"sources":["HOC/withAuthRedirect.jsx","assets/images/avatar.png","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthComponent","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","putStatus","type","ProfileInfo","profile","putUserStatusTC","Preloader","photos","fullName","src","large","avatar","classNamewidth","height","alt","Post","memo","message","console","log","AddPostReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","component","name","MyPosts","postsComponents","profilePage","posts","map","post","postText","addPost","compose","dispatch","text","addPostActionCreator","onPostChange","updateNewPostTextActionCreator","Profile","className","P","content","PostsContainer","ProfileContainer","userId","match","params","getProfileTC","getUserStatusTC","setUserProfile","withRouter"],"mappings":"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","file":"static/js/6.3e3fada6.chunk.js","sourcesContent":["/* eslint-disable */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth\n})\n\nconst withAuthComponent = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\n      return <Component {...this.props} />;\n    }\n  }\n  const ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\n  return ConnectedAuthRedirectComponent;\n};\n\nexport default withAuthComponent;\n","export default __webpack_public_path__ + \"static/media/avatar.f0ed1e1e.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__1qUN5\"};","/* eslint-disable */\nimport React, { useEffect, useState } from 'react';\n\nconst ProfileStatusHooks = (props) => {\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status);\n  useEffect(() => {\n    setStatus(props.status)\n  }, [props.status])\n  const activateEditMode = () => {\n    setEditMode(true);\n  }\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.putStatus(status);\n  }\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  }\n  return <>\n    {!editMode && <div>\n      <span onDoubleClick={activateEditMode}>{props.status}</span>\n    </div>\n    }\n\n    {editMode && <div>\n      <input\n        onChange={onStatusChange}\n        autoFocus={true}\n        onBlur={deactivateEditMode}\n        type=\"text\"\n        value={status}\n      />\n    </div>\n    }\n  </>\n}\n\n\n\nexport default ProfileStatusHooks;\n","/* eslint-disable */\nimport React from 'react';\nimport avatar from '../../../assets/images/avatar.png';\nimport Preloader from '../../preloader/Preloader';\nimport ProfileStatusHooks from './ProfileStatus/ProfileStatusHooks';\n\nconst ProfileInfo = ({ profile, status, putUserStatusTC }) => {\n  if (!profile) {\n    return <Preloader />\n  }\n  const { photos, fullName, } = profile;\n  return (\n    <>\n      <div>\n        <img src={photos.large ? photos.large : avatar} classNamewidth={150} height={150} alt=\"avatar\" />\n      </div>\n      <div>\n        <ProfileStatusHooks status={status} putStatus={putUserStatusTC} />\n        <p>name: {fullName}</p>\n      </div>\n    </>\n  );\n};\n\nexport default ProfileInfo;\n","/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Post = React.memo(({ message }) => {\n  console.log('render Post');\n  return (\n    <div>\n      {message}\n    </div>\n  );\n})\n\nPost.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n// function Post({ message }) {\n//   console.log('render Post');\n//   return (\n//     <div>\n//       {message}\n//     </div>\n//   );\n// }\n\n// Post.propTypes = {\n//   message: PropTypes.string.isRequired,\n// };\n\n\nexport default Post;\n","/* eslint-disable */\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nconst AddPostForm = ({ handleSubmit }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field component=\"textarea\" name=\"postText\" />\n      </div>\n      <div>\n        <button>add message</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddPostReduxForm = reduxForm({\n  form: 'addPost',\n})(AddPostForm);\n\nexport default AddPostReduxForm;\n","/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post/Post';\nimport AddPostForm from './AddPostForm/AddPostForm'\n\nconst MyPosts = (props) => {\n  console.log('render MyPosts')\n  const { posts } = props.profilePage;\n  const addPost = ({ postText }) => {\n    props.addPost(postText);\n  };\n  const postsComponents = posts.map((post) => <Post message={post.post} />);\n  return (\n    <div>\n      <AddPostForm onSubmit={addPost} {...props} />\n      {postsComponents}\n    </div>\n  );\n}\n\nMyPosts.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    post: PropTypes.string.isRequired,\n  })).isRequired,\n  addPost: PropTypes.func.isRequired,\n  updateNewPostText: PropTypes.func.isRequired,\n};\n\nexport default MyPosts;\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport MyPosts from './MyPosts';\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profileReducer';\nimport withAuthComponent from '../../../HOC/withAuthRedirect';\n\nconst mapStateToProps = (state) => ({\n  profilePage: state.profilePage,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addPost: (text) => {\n    dispatch(addPostActionCreator(text));\n  },\n  onPostChange: (text) => {\n    dispatch(updateNewPostTextActionCreator(text));\n  },\n});\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthComponent,\n)(MyPosts);\n","/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport P from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport PostsContainer from './MyPosts/PostsContainer';\n\nfunction Profile(props) {\n  return (\n    <div className={P.content}>\n      <ProfileInfo {...props} />\n      <PostsContainer />\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    post: PropTypes.string.isRequired,\n  })).isRequired,\n};\n\nexport default Profile;\n","/* eslint-disable */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport {\n  getProfileTC, setUserProfile,\n  getUserStatusTC, putUserStatusTC\n} from '../../redux/profileReducer';\nimport { withRouter } from 'react-router';\nimport withAuthComponent from '../../HOC/withAuthRedirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n    if (!userId) userId = 2;\n    this.props.getProfileTC(userId);\n    this.props.getUserStatusTC(userId);\n  }\n  render() {\n    return <Profile {...this.props} />;\n  }\n}\n\nconst mapStateToProps = ({ profilePage }) => ({\n  profile: profilePage.profile,\n  status: profilePage.status\n});\n\nexport default compose(\n  connect(mapStateToProps, {\n    setUserProfile,\n    getProfileTC,\n    getUserStatusTC,\n    putUserStatusTC\n  }),\n  withAuthComponent,\n  withRouter\n)(ProfileContainer);\n"],"sourceRoot":""}