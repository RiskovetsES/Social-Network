{"version":3,"sources":["HOC/withAuthRedirect.jsx","components/Dialogs/Dialog/Dialog.module.scss","components/Dialogs/Dialogs.module.scss","components/Dialogs/MessageForm/MessageForm.module.scss","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/MessageForm/MessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthComponent","Component","RedirectComponent","this","props","to","React","connect","module","exports","Dialog","name","id","className","s","dialogItem","Avatar","Message","message","renderTextField","label","input","meta","touched","invalid","error","custom","TextField","fullWidth","placeholder","helperText","MessageReduxForm","reduxForm","form","handleSubmit","pristine","reset","submitting","onSubmit","Box","mb","Field","component","btn","type","disabled","onClick","Dialogs","dialogsPage","addMessage","dialogs","messages","Grid","container","rowSpacing","columnSpacing","xs","sm","md","item","dialogs__list","map","d","messages__list","m","messageText","compose","dispatch","text","addMessageActionCreator","onMessageChange","updateNewMessageTextActionCreator"],"mappings":"oMAKMA,EAAkB,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAME,KAAKD,SAcNE,IAXW,SAACC,GAAe,IAClCC,EADiC,4JAErC,WACE,OAAKC,KAAKC,MAAMN,OACT,cAACG,EAAD,eAAeE,KAAKC,QADI,cAAC,IAAD,CAAUC,GAAG,eAHT,GACPC,IAAML,WAOtC,OADuCM,YAAQX,EAARW,CAAyBL,K,oBCflEM,EAAOC,QAAU,CAAC,WAAa,6B,oBCA/BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,eAAiB,kC,oBCArHD,EAAOC,QAAU,CAAC,IAAM,2B,+HCiBTC,EAZA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OACb,qBAAIC,UAAWC,IAAEC,WAAjB,UACE,cAACC,EAAA,EAAD,UAASL,IACT,cAAC,IAAD,CAASN,GAAE,kBAAaO,GAAxB,SAA+BD,Q,kBCEpBM,EARC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACd,oBAAIL,UAAU,UAAd,SAAyBK,K,iGCKrBC,EAAkB,SAAC,GAAD,IACtBC,EADsB,EACtBA,MACAC,EAFsB,EAEtBA,MAFsB,IAGtBC,KAAQC,EAHc,EAGdA,QAASC,EAHK,EAGLA,QAASC,EAHJ,EAGIA,MACvBC,EAJmB,wBAMtB,cAACC,EAAA,EAAD,yBACEC,WAAS,EACTR,MAAOA,EACPS,YAAaT,EACbK,MAAOF,GAAWC,EAClBM,WAAYP,GAAWE,GACnBJ,GACAK,KA4BOK,EAJUC,YAAU,CACjCC,KAAM,WADiBD,EAnBL,SAAC,GAAmD,IAAjDE,EAAgD,EAAhDA,aAAcC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WACpD,OACE,uBAAMC,SAAUJ,EAAhB,UACE,cAACK,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACC,EAAA,EAAD,CAAOC,UAAWvB,EAAiBR,KAAK,kBAE1C,cAAC4B,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,wBAAQ3B,UAAWC,IAAE6B,IAAKC,KAAK,SAASC,SAAUV,GAAYE,EAA9D,sBAIF,cAACE,EAAA,EAAD,UACE,wBAAQ1B,UAAWC,IAAE6B,IAAKC,KAAK,SAASC,SAAUV,GAAYE,EAAYS,QAASV,EAAnF,kC,SC0DOW,MAvDf,YAA+C,IAA5BC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,WACtBC,EAAsBF,EAAtBE,QAASC,EAAaH,EAAbG,SAIjB,OACE,8BACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAY,EAAGC,cAAe,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAlE,UACE,cAACN,EAAA,EAAD,CAAMO,MAAI,EAACH,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA7B,SACE,oBAAI7C,UAAWC,IAAE8C,cAAjB,SACGV,EAAQW,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,CACEnD,KAAMmD,EAAEnD,KACRC,GAAIkD,EAAElD,IACDkD,EAAElD,WAKf,eAACwC,EAAA,EAAD,CAAMO,MAAI,EAACH,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAA9B,UACE,oBAAI7C,UAAWC,IAAEiD,eAAjB,SAEIZ,EAASU,KAAI,SAACG,GAAD,OACX,cAAC,EAAD,CACE9C,QAAS8C,EAAE9C,QACXN,GAAIoD,EAAEpD,IACDoD,EAAEpD,SAKf,cAAC,EAAD,CAAkB0B,SA7BH,SAAC,GAAqB,IAAnB2B,EAAkB,EAAlBA,YACxBhB,EAAWgB,eCEAC,4BACb3D,aAbsB,SAACV,GAAD,MAAY,CAClCmD,YAAanD,EAAMmD,gBAGM,SAACmB,GAAD,MAAe,CACxClB,WAAY,SAACmB,GACXD,EAASE,YAAwBD,KAEnCE,gBAAiB,SAACF,GAChBD,EAASI,YAAkCH,SAK7CpE,IAFakE,CAGbnB","file":"static/js/3.c2bf9e8f.chunk.js","sourcesContent":["/* eslint-disable */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth\n})\n\nconst withAuthComponent = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\n      return <Component {...this.props} />;\n    }\n  }\n  const ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\n  return ConnectedAuthRedirectComponent;\n};\n\nexport default withAuthComponent;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"Dialog_dialogItem__1TqRD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1XXrV\",\"dialogs__list\":\"Dialogs_dialogs__list__2fgiM\",\"messages__list\":\"Dialogs_messages__list__1GzDW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"MessageForm_btn__3qaLI\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Avatar } from '@mui/material';\nimport s from './Dialog.module.scss';\n\nconst Dialog = ({ name, id }) => (\n  <li className={s.dialogItem}>\n    <Avatar>{name}</Avatar>\n    <NavLink to={`/dialog/${id}`}>{name}</NavLink>\n  </li>\n);\n\nDialog.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nexport default Dialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Message = ({ message }) => (\n  <li className=\"message\">{message}</li>\n);\n\nMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","/* eslint-disable */\nimport { TextField } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport s from './MessageForm.module.scss'\n\n\n\nconst renderTextField = ({\n  label,\n  input,\n  meta: { touched, invalid, error },\n  ...custom\n}) => (\n  <TextField\n    fullWidth\n    label={label}\n    placeholder={label}\n    error={touched && invalid}\n    helperText={touched && error}\n    {...input}\n    {...custom}\n  />\n)\n\n\nconst MessageForm = ({ handleSubmit, pristine, reset, submitting }) => {\n  return (\n    <form onSubmit={handleSubmit} >\n      <Box mb={2}>\n        <Field component={renderTextField} name='messageText' />\n      </Box>\n      <Box mb={1}>\n        <button className={s.btn} type=\"submit\" disabled={pristine || submitting}>\n          Submit\n        </button>\n      </Box>\n      <Box>\n        <button className={s.btn} type=\"button\" disabled={pristine || submitting} onClick={reset}>\n          Clear Values\n        </button>\n      </Box>\n    </ form>\n  );\n}\nconst MessageReduxForm = reduxForm({\n  form: 'message',\n})(MessageForm)\n\nexport default MessageReduxForm;\n","/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from './Dialog/Dialog';\nimport s from './Dialogs.module.scss';\nimport Message from './Message/Message';\nimport MessageReduxForm from './MessageForm/MessageForm';\nimport { Grid } from '@mui/material';\n\n// function Dialogs({ dialogsPage, addMessage }) {\n//   const { dialogs, messages } = dialogsPage;\n//   const addMessageFunc = ({ messageText }) => {\n//     addMessage(messageText)\n//   }\n//   return (\n//     <div className={s.dialogs}>\n//       <ul className={s.dialogs__list}>\n//         {dialogs.map((d) => (\n//           <Dialog\n//             name={d.name}\n//             id={d.id}\n//             key={d.id}\n//           />\n//         ))}\n//       </ul>\n//       <ul className={s.messages__list}>\n//         {\n//           messages.map((m) => (\n//             <Message\n//               message={m.message}\n//               id={m.id}\n//               key={m.id}\n//             />\n//           ))\n//         }\n//       </ul>\n//       <MessageReduxForm onSubmit={addMessageFunc} />\n//     </div>\n//   );\n// }\n\n\nfunction Dialogs({ dialogsPage, addMessage }) {\n  const { dialogs, messages } = dialogsPage;\n  const addMessageFunc = ({ messageText }) => {\n    addMessage(messageText)\n  }\n  return (\n    <div >\n      <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n        <Grid item xs={3} sm={2} md={2}>\n          <ul className={s.dialogs__list}>\n            {dialogs.map((d) => (\n              <Dialog\n                name={d.name}\n                id={d.id}\n                key={d.id}\n              />\n            ))}\n          </ul>\n        </Grid>\n        <Grid item xs={9} sm={10} md={10}>\n          <ul className={s.messages__list}>\n            {\n              messages.map((m) => (\n                <Message\n                  message={m.message}\n                  id={m.id}\n                  key={m.id}\n                />\n              ))\n            }\n          </ul>\n          <MessageReduxForm onSubmit={addMessageFunc} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\n\n\n\n\nDialogs.propTypes = {\n  dialogsPage: PropTypes.shape({\n    dialogs: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    }),\n    messages: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      message: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport default Dialogs;\n","/* eslint react/prop-types: 0 */\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport withAuthComponent from '../../HOC/withAuthRedirect';\nimport { addMessageActionCreator, updateNewMessageTextActionCreator } from '../../redux/dialogsReducer';\nimport Dialogs from './Dialogs';\n\n// function Dialogs({ store }) {\n//   const { dialogs, messages } = store.state.dialogsPage;\n//   return (\n//     <ul className={D.dialogs}>\n//       <ul className={D.dialogs__list}>\n//         {dialogs.map((d) => (\n//           <Dialog\n//             name={d.name}\n//             id={d.id}\n//             key={d.id}\n//           />\n//         ))}\n//       </ul>\n//       <ul className={D.messages__list}>\n//         {\n//           messages.map((m) => (\n//             <Message\n//               message={m.message}\n//               id={m.id}\n//               key={m.id}\n//             />\n//           ))\n//         }\n//       </ul>\n//     </ul>\n//   );\n// }\n\nconst mapStateToProps = (state) => ({\n  dialogsPage: state.dialogsPage,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addMessage: (text) => {\n    dispatch(addMessageActionCreator(text));\n  },\n  onMessageChange: (text) => {\n    dispatch(updateNewMessageTextActionCreator(text));\n  },\n});\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthComponent,\n)(Dialogs);\n"],"sourceRoot":""}