{"version":3,"sources":["HOC/withAuthRedirect.jsx","assets/images/avatar.png","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusHooks.jsx","components/UserContacts/UserContacts.jsx","components/Profile/ProfileInfo/ProfileDataInfo/ProfileDataInfo.jsx","components/Profile/ProfileInfo/ProfileDataInfoForm/ProfileDataInfoForm.jsx","components/Profile/ProfileInfo/ProfileData.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthComponent","Component","RedirectComponent","this","props","to","React","connect","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","module","exports","ProfileStatusHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","putStatus","type","UserContacts","title","ProfileDataInfo","profile","isOwner","activateEditMode","fullName","lookingForAJob","lookingForAJobDescription","contacts","entries","map","values","Button","onClick","ProfileDataInfoReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","placeholder","name","component","ProfileData","putUserStatusTC","savePhotoTC","saveProfileTC","Preloader","photos","src","large","avatar","width","height","alt","files","formData","Post","memo","message","console","log","AddPostReduxForm","MyPosts","postsComponents","profilePage","posts","post","postText","addPost","compose","dispatch","text","addPostAC","onPostChange","updateNewPostTextAC","Profile","className","P","content","PostsContainer","ProfileContainer","userId","match","params","id","getProfileTC","getUserStatusTC","refreshProfile","prevProps","prevState","snapshot","setUserProfile","setUserProfileAC","withRouter"],"mappings":"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","file":"static/js/6.cf2ec071.chunk.js","sourcesContent":["/* eslint-disable */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth\n})\n\nconst withAuthComponent = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\n      return <Component {...this.props} />;\n    }\n  }\n  const ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\n  return ConnectedAuthRedirectComponent;\n};\n\nexport default withAuthComponent;\n","export default __webpack_public_path__ + \"static/media/avatar.f0ed1e1e.png\";","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__1qUN5\"};","/* eslint-disable */\nimport React, { useEffect, useState } from 'react';\n\nconst ProfileStatusHooks = (props) => {\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status);\n  useEffect(() => {\n    setStatus(props.status)\n  }, [props.status])\n  const activateEditMode = () => {\n    setEditMode(true);\n  }\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.putStatus(status);\n  }\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  }\n  return <>\n    {!editMode && <span\n      onDoubleClick={activateEditMode}>{props.status}\n    </span>\n    }\n\n    {editMode && <input\n      onChange={onStatusChange}\n      autoFocus={true}\n      onBlur={deactivateEditMode}\n      type=\"text\"\n      value={status}\n    />\n    }\n  </>\n}\n\n\n\nexport default ProfileStatusHooks;\n","/* eslint-disable */\nimport React from 'react';\n\nconst UserContacts = ({title,value = 'not information'}) => {\n  return <div>\n    <p>\n      {title}: {value}\n    </p>\n  </div>\n}\n\nexport default UserContacts;\n","/* eslint-disable */\nimport React from 'react';\nimport UserContacts from '../../../UserContacts/UserContacts';\nimport { Button } from '@mui/material';\n\nconst ProfileDataInfo = ({ profile,isOwner,activateEditMode }) => {\n\n  const {fullName,lookingForAJob,\n    lookingForAJobDescription,contacts} = profile;\n  return  <>\n\n     <p>name: {fullName}</p>\n     <p>\n       Looking for a job: {lookingForAJob ? 'yes' : 'no'}\n     </p>\n     {lookingForAJob && <p>\n       My professionals skills: {lookingForAJobDescription}\n     </p>}\n     <div>\n       Contacts: {Object.entries(contacts).map(values => {\n       if(values[1]) {\n         return <UserContacts key={values[0]}\n                              title={values[0]}\n                              value={values[1]}/>\n       }\n       return null\n     })}\n     </div>\n    {isOwner && <Button onClick={activateEditMode}>Edit profile</Button>}\n  </>\n  };\n\nexport default ProfileDataInfo;\n","/* eslint-disable */\nimport React from 'react';\nimport UserContacts from '../../../UserContacts/UserContacts';\nimport { Button } from '@mui/material';\nimport { Field, reduxForm } from 'redux-form';\n\nconst ProfileDataInfoForm = ({handleSubmit}) => <form onSubmit={handleSubmit}>\n  <div>\n    name: <Field placeholder='enter the name' name='name' component='input'/>\n  </div>\n  <div>\n    Looking for a job: <Field\n    placeholder='job' name='job'\n    component='input' type='checkbox'/>\n  </div>\n    <div>\n    My professionals skills:\n      <div>\n        <Field\n          placeholder='enter professionals skills'\n          name='skills' component='textarea'/>\n      </div>\n  </div>\n  <div>\n    About me:\n    <div>\n      <Field\n        placeholder='write about yourself'\n        name='aboutMe' component='textarea'/>\n    </div>\n  {/*  Contacts: {Object.entries(contacts).map(values => {*/}\n  {/*  if(values[1]) {*/}\n  {/*    return <UserContacts key={values[0]}*/}\n  {/*                         title={values[0]}*/}\n  {/*                         value={values[1]}/>*/}\n  {/*  }*/}\n  {/*  return null*/}\n  {/*})}*/}\n  </div>\n   <button>Save</button>\n</form>\n\nconst ProfileDataInfoReduxForm = reduxForm({form: 'editProfile'})(ProfileDataInfoForm);\n\nexport default ProfileDataInfoReduxForm;\n","/* eslint-disable */\nimport React, { useState } from 'react';\nimport avatar from '../../../assets/images/avatar.png';\nimport Preloader from '../../preloader/Preloader';\nimport ProfileStatusHooks from './ProfileStatus/ProfileStatusHooks';\nimport ProfileDataInfo from './ProfileDataInfo/ProfileDataInfo';\nimport ProfileDataInfoForm from './ProfileDataInfoForm/ProfileDataInfoForm';\n\nconst ProfileData = ({isOwner, status, putUserStatusTC, savePhotoTC, saveProfileTC, ...props }) => {\n  const [editMode,setEditMode] = useState(false);\n  const activateEditMode = () => setEditMode(true);\n  const photoSelected = (e) => {\n    if (e.target.files.length) {\n      savePhotoTC(e.target.files[0]);\n    }\n  }\n  if (!props.profile) {\n    return <Preloader />\n  }\n  const {\n    photos\n  } = props.profile;\n  const onSubmit = (formData) => {\n    saveProfileTC(formData)\n  }\n\n  return (\n    <>\n      <div>\n        <img src={photos.large ? photos.large : avatar} width={150} height={150} alt=\"avatar\" />\n        {isOwner && <input type={'file'} onChange={photoSelected}/>}\n      </div>\n        <p>\n          Status: <ProfileStatusHooks\n          status={status} putStatus={putUserStatusTC} />\n        </p>\n      {\n        editMode ? <ProfileDataInfoForm\n          profile={props.profile}\n          onSubmit={onSubmit}\n          /> :\n        <ProfileDataInfo\n          profile={props.profile}\n          isOwner={isOwner}\n          activateEditMode={activateEditMode}\n        />\n      }\n    </>\n  );\n};\n\nexport default ProfileData;\n","/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Post = React.memo(({ message }) => {\n  console.log('render Post');\n  return (\n    <div>\n      {message}\n    </div>\n  );\n})\n\nPost.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n// function Post({ message }) {\n//   console.log('render Post');\n//   return (\n//     <div>\n//       {message}\n//     </div>\n//   );\n// }\n\n// Post.propTypes = {\n//   message: PropTypes.string.isRequired,\n// };\n\n\nexport default Post;\n","/* eslint-disable */\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nconst AddPostForm = ({ handleSubmit }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field component=\"textarea\" name=\"postText\" />\n      </div>\n      <div>\n        <button>add message</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddPostReduxForm = reduxForm({\n  form: 'addPost',\n})(AddPostForm);\n\nexport default AddPostReduxForm;\n","/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post/Post';\nimport AddPostForm from './AddPostForm/AddPostForm'\n\nconst MyPosts = (props) => {\n  console.log('render MyPosts')\n  const { posts } = props.profilePage;\n  const addPost = ({ postText }) => {\n    props.addPost(postText);\n  };\n  const postsComponents = posts.map((post) => <Post message={post.post} />);\n  return (\n    <div>\n      <AddPostForm onSubmit={addPost} {...props} />\n      {postsComponents}\n    </div>\n  );\n}\n\nMyPosts.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    post: PropTypes.string.isRequired,\n  })).isRequired,\n  addPost: PropTypes.func.isRequired,\n  updateNewPostText: PropTypes.func.isRequired,\n};\n\nexport default MyPosts;\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport MyPosts from './MyPosts';\nimport { addPostAC, updateNewPostTextAC } from '../../../redux/profileReducer';\nimport withAuthComponent from '../../../HOC/withAuthRedirect';\n\nconst mapStateToProps = (state) => ({\n  profilePage: state.profilePage,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addPost: (text) => {\n    dispatch(addPostAC(text));\n  },\n  onPostChange: (text) => {\n    dispatch(updateNewPostTextAC(text));\n  },\n});\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthComponent,\n)(MyPosts);\n","/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport P from './Profile.module.css';\nimport ProfileData from './ProfileInfo/ProfileData';\nimport PostsContainer from './MyPosts/PostsContainer';\nimport { savePhotoTC } from '../../redux/profileReducer';\n//todo: добавить загрузку своего профиля\nfunction Profile({...props}) {\n  return (\n    <div className={P.content}>\n      <ProfileData {...props}\n      />\n      <PostsContainer />\n    </div>\n  );\n}\n\n\nexport default Profile;\n","/* eslint-disable */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport {\n  getProfileTC, setUserProfileAC,\n  getUserStatusTC, putUserStatusTC, savePhotoTC, saveProfileTC\n} from '../../redux/profileReducer';\nimport { withRouter } from 'react-router';\nimport withAuthComponent from '../../HOC/withAuthRedirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n  //todo: пофиксить баг со статусом\n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n    if (!userId) userId = this.props.id;\n    this.props.getProfileTC(userId);\n    this.props.getUserStatusTC(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if(this.props.match.params.userId !== prevProps.match.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return <Profile {...this.props}\n    isOwner={!this.props.match.params.userId}\n    />;\n  }\n}\n\nconst mapStateToProps = ({ profilePage,auth }) => ({\n  id: auth.id,\n  profile: profilePage.profile,\n  status: profilePage.status\n});\n\nexport default compose(\n  connect(mapStateToProps, {\n    setUserProfile: setUserProfileAC,\n    getProfileTC,\n    getUserStatusTC,\n    putUserStatusTC,\n    savePhotoTC,\n    saveProfileTC,\n  }),\n  withAuthComponent,\n  withRouter\n)(ProfileContainer);\n"],"sourceRoot":""}