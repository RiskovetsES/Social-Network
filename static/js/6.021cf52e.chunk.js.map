{"version":3,"sources":["HOC/withAuthRedirect.jsx","assets/images/avatar.png","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusHooks.jsx","components/UserContacts/UserContacts.jsx","components/Profile/ProfileInfo/ProfileDataInfo/ProfileDataInfo.jsx","components/Profile/ProfileInfo/ProfileDataInfoForm/ProfileDataInfoForm.jsx","components/Profile/ProfileInfo/ProfileData.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthComponent","Component","RedirectComponent","this","props","to","React","connect","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","module","exports","ProfileStatusHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","putStatus","type","UserContacts","title","ProfileDataInfo","profile","isOwner","activateEditMode","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","entries","map","values","Button","onClick","ProfileDataInfoReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","name","placeholder","component","ProfileData","putUserStatusTC","savePhotoTC","saveProfileTC","Preloader","photos","src","large","avatar","width","height","alt","files","initialValues","formData","Post","memo","message","console","log","AddPostReduxForm","MyPosts","postsComponents","profilePage","posts","post","postText","addPost","compose","dispatch","text","addPostAC","onPostChange","updateNewPostTextAC","Profile","className","P","content","PostsContainer","ProfileContainer","userId","match","params","id","getProfileTC","getUserStatusTC","refreshProfile","prevProps","prevState","snapshot","setUserProfile","setUserProfileAC","withRouter"],"mappings":"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","file":"static/js/6.021cf52e.chunk.js","sourcesContent":["/* eslint-disable */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth\n})\n\nconst withAuthComponent = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\n      return <Component {...this.props} />;\n    }\n  }\n  const ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\n  return ConnectedAuthRedirectComponent;\n};\n\nexport default withAuthComponent;\n","export default __webpack_public_path__ + \"static/media/avatar.f0ed1e1e.png\";","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__1qUN5\"};","/* eslint-disable */\nimport React, { useEffect, useState } from 'react';\n\nconst ProfileStatusHooks = (props) => {\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status);\n  useEffect(() => {\n    setStatus(props.status)\n  }, [props.status])\n  const activateEditMode = () => {\n    setEditMode(true);\n  }\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.putStatus(status);\n  }\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  }\n  return <>\n    {!editMode && <span\n      onDoubleClick={activateEditMode}>{props.status}\n    </span>\n    }\n\n    {editMode && <input\n      onChange={onStatusChange}\n      autoFocus={true}\n      onBlur={deactivateEditMode}\n      type=\"text\"\n      value={status}\n    />\n    }\n  </>\n}\n\n\n\nexport default ProfileStatusHooks;\n","/* eslint-disable */\nimport React from 'react';\n\nconst UserContacts = ({title,value = 'not information'}) => {\n  return <div>\n    <p>\n      {title}: {value}\n    </p>\n  </div>\n}\n\nexport default UserContacts;\n","/* eslint-disable */\nimport React from 'react';\nimport { Button } from '@mui/material';\nimport UserContacts from '../../../UserContacts/UserContacts';\n\nconst ProfileDataInfo = ({ profile, isOwner, activateEditMode }) => {\n  const {\n    fullName, aboutMe,\n    lookingForAJob,\n    lookingForAJobDescription,\n    contacts,\n  } = profile;\n  return (\n    <>\n      <p>\n        Name:\n        {fullName}\n      </p>\n      <p>\n        Obout me:\n        {aboutMe}\n      </p>\n      <p>\n        Looking for a job:\n        {' '}\n        {lookingForAJob ? 'yes' : 'no'}\n      </p>\n      {lookingForAJob && (\n      <p>\n        My professionals skills:\n        {' '}\n        {lookingForAJobDescription}\n      </p>\n      )}\n      <div>\n        Contacts:\n        {' '}\n        {Object.entries(contacts).map((values) => {\n          if (values[1]) {\n            return (\n              <UserContacts\n                key={values[0]}\n                title={values[0]}\n                value={values[1]}\n              />\n            );\n          }\n          return null;\n        })}\n      </div>\n      {isOwner && <Button onClick={activateEditMode}>Edit profile</Button>}\n    </>\n  );\n};\n\nexport default ProfileDataInfo;\n","/* eslint-disable */\nimport React from 'react';\nimport { Button } from '@mui/material';\nimport { Field, reduxForm } from 'redux-form';\nimport UserContacts from '../../../UserContacts/UserContacts';\n\nconst ProfileDataInfoForm = ({ handleSubmit, profile }) => {\n  const { contacts } = profile;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        name:\n        {' '}\n        <Field\n          name=\"fullName\"\n          placeholder=\"fullName\"\n          component=\"input\"\n        />\n      </div>\n      <div>\n        Looking for a job:\n        {' '}\n        <Field\n          name=\"lookingForAJob\"\n          placeholder=\"job\"\n          component=\"input\"\n          type=\"checkbox\"\n        />\n      </div>\n      <div>\n        Looking for a job description:\n        <div>\n          <Field\n            name=\"lookingForAJobDescription\"\n            placeholder=\"who are you according to the horoscope\"\n            component=\"textarea\"\n          />\n        </div>\n      </div>\n      <div>\n        My professionals skills:\n        <div>\n          <Field\n            name=\"skills\"\n            placeholder=\"enter professionals skills\"\n            component=\"textarea\"\n          />\n        </div>\n      </div>\n      <div>\n        About me:\n        <div>\n          <Field\n            placeholder=\"write about yourself\"\n            name=\"aboutMe\"\n            component=\"textarea\"\n          />\n        </div>\n        Contacts:\n        {' '}\n        {Object.entries(contacts)\n          .map((values) => (\n            <div>\n              {values[0]}:\n              <Field\n                key={values[0]}\n                name={`contacts.${values[0]}`}\n                component=\"input\"\n              />\n            </div>\n          ))}\n      </div>\n      <button>Save</button>\n    </form>\n  );\n};\n\nconst ProfileDataInfoReduxForm = reduxForm({ form: 'editProfile' })(ProfileDataInfoForm);\n\nexport default ProfileDataInfoReduxForm;\n","/* eslint-disable */\nimport React, { useState } from 'react';\nimport avatar from '../../../assets/images/avatar.png';\nimport Preloader from '../../preloader/Preloader';\nimport ProfileStatusHooks from './ProfileStatus/ProfileStatusHooks';\nimport ProfileDataInfo from './ProfileDataInfo/ProfileDataInfo';\nimport ProfileDataInfoForm from './ProfileDataInfoForm/ProfileDataInfoForm';\n\nconst ProfileData = ({isOwner, status, putUserStatusTC, savePhotoTC, saveProfileTC, ...props }) => {\n  const [editMode,setEditMode] = useState(false);\n  const activateEditMode = () => setEditMode(true);\n  const photoSelected = (e) => {\n    if (e.target.files.length) {\n      savePhotoTC(e.target.files[0]);\n    }\n  }\n  if (!props.profile) {\n    return <Preloader />\n  }\n  const {\n    photos\n  } = props.profile;\n  const onSubmit = (formData) => {\n    saveProfileTC(formData);\n    setEditMode(false);\n  }\n\n  return (\n    <>\n      <div>\n        <img src={photos.large ? photos.large : avatar} width={150} height={150} alt=\"avatar\" />\n        {isOwner && <input type={'file'} onChange={photoSelected}/>}\n      </div>\n        <p>\n          Status: <ProfileStatusHooks\n          status={status} putStatus={putUserStatusTC} />\n        </p>\n      {\n        editMode ? <ProfileDataInfoForm\n            initialValues={props.profile}\n            profile={props.profile}\n            onSubmit={onSubmit}\n          /> :\n        <ProfileDataInfo\n          profile={props.profile}\n          isOwner={isOwner}\n          activateEditMode={activateEditMode}\n        />\n      }\n    </>\n  );\n};\n\nexport default ProfileData;\n","/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Post = React.memo(({ message }) => {\n  console.log('render Post');\n  return (\n    <div>\n      {message}\n    </div>\n  );\n})\n\nPost.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n// function Post({ message }) {\n//   console.log('render Post');\n//   return (\n//     <div>\n//       {message}\n//     </div>\n//   );\n// }\n\n// Post.propTypes = {\n//   message: PropTypes.string.isRequired,\n// };\n\n\nexport default Post;\n","/* eslint-disable */\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nconst AddPostForm = ({ handleSubmit }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field component=\"textarea\" name=\"postText\" />\n      </div>\n      <div>\n        <button>add message</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddPostReduxForm = reduxForm({\n  form: 'addPost',\n})(AddPostForm);\n\nexport default AddPostReduxForm;\n","/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post/Post';\nimport AddPostForm from './AddPostForm/AddPostForm';\n\nconst MyPosts = (props) => {\n  console.log('render MyPosts');\n  const { posts } = props.profilePage;\n  const addPost = ({ postText }) => {\n    props.addPost(postText);\n  };\n  const postsComponents = posts.map((post) => <Post message={post.post} />);\n  return (\n    <div>\n      <AddPostForm onSubmit={addPost} {...props} />\n      {postsComponents}\n    </div>\n  );\n};\n\nMyPosts.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    post: PropTypes.string.isRequired,\n  })).isRequired,\n  addPost: PropTypes.func.isRequired,\n  updateNewPostText: PropTypes.func.isRequired,\n};\n\nexport default MyPosts;\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport MyPosts from './MyPosts';\nimport { addPostAC, updateNewPostTextAC } from '../../../redux/profileReducer';\nimport withAuthComponent from '../../../HOC/withAuthRedirect';\n\nconst mapStateToProps = (state) => ({\n  profilePage: state.profilePage,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addPost: (text) => {\n    dispatch(addPostAC(text));\n  },\n  onPostChange: (text) => {\n    dispatch(updateNewPostTextAC(text));\n  },\n});\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthComponent,\n)(MyPosts);\n","/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport P from './Profile.module.css';\nimport ProfileData from './ProfileInfo/ProfileData';\nimport PostsContainer from './MyPosts/PostsContainer';\nimport { savePhotoTC } from '../../redux/profileReducer';\n//todo: добавить загрузку своего профиля\nfunction Profile({...props}) {\n  return (\n    <div className={P.content}>\n      <ProfileData {...props}\n      />\n      <PostsContainer />\n    </div>\n  );\n}\n\n\nexport default Profile;\n","/* eslint-disable */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { compose } from 'redux';\nimport Profile from './Profile';\nimport {\n  getProfileTC, setUserProfileAC,\n  getUserStatusTC, putUserStatusTC, savePhotoTC, saveProfileTC,\n} from '../../redux/profileReducer';\nimport withAuthComponent from '../../HOC/withAuthRedirect';\n\nclass ProfileContainer extends React.Component {\n  // todo: пофиксить баг со статусом\n  refreshProfile() {\n    let { userId } = this.props.match.params;\n    if (!userId) userId = this.props.id;\n    this.props.getProfileTC(userId);\n    this.props.getUserStatusTC(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return (\n      <Profile\n        {...this.props}\n        isOwner={!this.props.match.params.userId}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = ({ profilePage, auth }) => ({\n  id: auth.id,\n  profile: profilePage.profile,\n  status: profilePage.status,\n});\n\nexport default compose(\n  connect(mapStateToProps, {\n    setUserProfile: setUserProfileAC,\n    getProfileTC,\n    getUserStatusTC,\n    putUserStatusTC,\n    savePhotoTC,\n    saveProfileTC,\n  }),\n  withAuthComponent,\n  withRouter,\n)(ProfileContainer);\n"],"sourceRoot":""}