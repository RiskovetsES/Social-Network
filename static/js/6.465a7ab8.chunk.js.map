{"version":3,"sources":["HOC/withAuthRedirect.jsx","assets/images/avatar.png","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusHooks.jsx","components/UserContacts/UserContacts.jsx","components/Profile/ProfileInfo/ProfileDataInfo/ProfileDataInfo.jsx","components/ReduxFormMU/TextFieldComponent.jsx","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","components/ReduxFormMU/CheckboxComponent.jsx","components/Profile/ProfileInfo/ProfileDataInfoForm/ProfileDataInfoForm.jsx","components/Profile/ProfileInfo/ProfileData.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthComponent","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","putStatus","type","UserContacts","title","ProfileDataInfo","profile","isOwner","activateEditMode","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","Object","entries","map","values","Button","onClick","TextFieldComponent","label","input","meta","touched","invalid","error","custom","TextField","placeholder","helperText","getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchBaseRoot","styled","ButtonBase","skipSx","ownerState","_extends","padding","borderRadius","edge","marginLeft","size","marginRight","SwitchBaseInput","cursor","position","opacity","width","height","top","left","margin","zIndex","SwitchBase","ref","checkedProp","checked","checkedIcon","className","defaultChecked","disabledProp","disabled","disableFocusRipple","icon","id","inputProps","inputRef","name","onFocus","readOnly","required","tabIndex","other","_objectWithoutPropertiesLoose","useControlled","controlled","default","Boolean","setCheckedState","muiFormControl","useFormControl","hasLabelFor","classes","slots","root","capitalize","composeClasses","useUtilityClasses","_jsxs","component","clsx","centerRipple","focusRipple","role","undefined","event","children","_jsx","nativeEvent","defaultPrevented","newChecked","target","createSvgIcon","d","getCheckboxUtilityClass","checkboxClasses","CheckboxRoot","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","indeterminate","color","theme","palette","text","secondary","disableRipple","backgroundColor","alpha","action","active","main","hoverOpacity","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","inProps","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","iconProp","indeterminateIcon","indeterminateIconProp","composedClasses","fontSize","CheckboxComponent","ProfileDataInfoReduxForm","reduxForm","form","validate","errors","forEach","field","email","test","handleSubmit","onSubmit","Field","variant","multiline","minRows","ProfileData","putUserStatusTC","savePhotoTC","saveProfileTC","Preloader","photos","src","large","avatar","alt","files","length","initialValues","formData","Post","memo","message","console","log","AddPostReduxForm","MyPosts","postsComponents","profilePage","posts","post","postText","addPost","compose","dispatch","addPostAC","onPostChange","updateNewPostTextAC","Profile","P","content","PostsContainer","ProfileContainer","userId","match","params","getProfileTC","getUserStatusTC","refreshProfile","prevProps","prevState","snapshot","setUserProfile","setUserProfileAC","withRouter"],"mappings":"oMAKMA,EAAkB,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAME,KAAKD,SAcNE,IAXW,SAACC,GAAe,IAClCC,EADiC,4JAErC,WACE,OAAKC,KAAKC,MAAMN,OACT,cAACG,EAAD,eAAeE,KAAKC,QADI,cAAC,IAAD,CAAUC,GAAG,eAHT,GACPC,IAAML,WAOtC,OADuCM,YAAQX,EAARW,CAAyBL,K,iCChBnD,QAA0B,oC,oBCCzCM,EAAOC,QAAU,CAAC,QAAU,2B,uLCqCbC,EAnCY,SAACN,GAC1B,MAAgCO,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BF,mBAASP,EAAMU,QAA3C,mBAAOA,EAAP,KAAeC,EAAf,KACAC,qBAAU,WACRD,EAAUX,EAAMU,UACf,CAACV,EAAMU,SAWV,OAAO,sCACHF,GAAY,sBACZK,cAZqB,WACvBJ,GAAY,IAUE,SACsBT,EAAMU,SAIzCF,GAAY,uBACXM,SAVmB,SAACC,GACtBJ,EAAUI,EAAEC,cAAcC,QAUxBC,WAAW,EACXC,OAhBuB,WACzBV,GAAY,GACZT,EAAMoB,UAAUV,IAedW,KAAK,OACLJ,MAAOP,Q,SCnBEY,EARM,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,MAAqC,IAA/BN,aAA+B,MAAvB,kBAAuB,EAC1D,OAAO,8BACL,8BACGM,EADH,KACYN,QCiDDO,EAlDS,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,iBAEzCC,EAIEH,EAJFG,SAAUC,EAIRJ,EAJQI,QACVC,EAGEL,EAHFK,eACAC,EAEEN,EAFFM,0BACAC,EACEP,EADFO,SAEF,OACE,qCACE,sCAEGJ,KAEH,0CAEGC,KAEH,mDAEG,IACAC,EAAiB,MAAQ,QAE3BA,GACD,yDAEG,IACAC,KAGH,4CAEG,IACAE,OAAOC,QAAQF,GAAUG,KAAI,SAACC,GAC7B,OAAIA,EAAO,GAEP,cAAC,EAAD,CAEEb,MAAOa,EAAO,GACdnB,MAAOmB,EAAO,IAFTA,EAAO,IAMX,WAGVV,GAAW,cAACW,EAAA,EAAD,CAAQC,QAASX,EAAjB,8B,sDChCHY,EAfY,SAAC,GAAD,IACzBC,EADyB,EACzBA,MACAC,EAFyB,EAEzBA,MAFyB,IAGzBC,KAAQC,EAHiB,EAGjBA,QAASC,EAHQ,EAGRA,QAASC,EAHD,EAGCA,MACvBC,EAJsB,wBAMzB,cAACC,EAAA,EAAD,yBACEP,MAAOA,EACPQ,YAAaR,EACbK,MAAOF,GAAWC,EAClBK,WAAYN,GAAWE,GACnBJ,GACAK,K,oHCdD,SAASI,EAA0BC,GACxC,OAAOC,YAAqB,oBAAqBD,GAEzBE,YAAuB,oBAAqB,CAAC,OAAQ,UAAW,WAAY,QAAS,YAAa,YAA5H,ICFMC,EAAY,CAAC,YAAa,UAAW,cAAe,YAAa,iBAAkB,WAAY,qBAAsB,OAAQ,OAAQ,KAAM,aAAc,WAAY,OAAQ,SAAU,WAAY,UAAW,WAAY,WAAY,WAAY,OAAQ,SA6B1PC,EAAiBC,YAAOC,IAAY,CACxCC,QAAQ,GADaF,EAEpB,gBACDG,EADC,EACDA,WADC,OAEGC,YAAS,CACbC,QAAS,EACTC,aAAc,OACO,UAApBH,EAAWI,MAAoB,CAChCC,WAAgC,UAApBL,EAAWM,MAAoB,GAAK,IAC3B,QAApBN,EAAWI,MAAkB,CAC9BG,YAAiC,UAApBP,EAAWM,MAAoB,GAAK,QAE7CE,EAAkBX,YAAO,QAAS,CACtCE,QAAQ,GADcF,CAErB,CACDY,OAAQ,UACRC,SAAU,WACVC,QAAS,EACTC,MAAO,OACPC,OAAQ,OACRC,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRd,QAAS,EACTe,OAAQ,IA8PKC,EAxPiB3E,cAAiB,SAAoBF,EAAO8E,GAC1E,IACE5D,EAqBElB,EArBFkB,UACS6D,EAoBP/E,EApBFgF,QACAC,EAmBEjF,EAnBFiF,YACAC,EAkBElF,EAlBFkF,UACAC,EAiBEnF,EAjBFmF,eACUC,EAgBRpF,EAhBFqF,SANF,EAsBIrF,EAfFsF,0BAPF,WAsBItF,EAdF+D,YARF,SASEwB,EAaEvF,EAbFuF,KACAC,EAYExF,EAZFwF,GACAC,EAWEzF,EAXFyF,WACAC,EAUE1F,EAVF0F,SACAC,EASE3F,EATF2F,KACAxE,EAQEnB,EARFmB,OACAL,EAOEd,EAPFc,SACA8E,EAME5F,EANF4F,QACAC,EAKE7F,EALF6F,SACAC,EAIE9F,EAJF8F,SACAC,EAGE/F,EAHF+F,SACA1E,EAEErB,EAFFqB,KACAJ,EACEjB,EADFiB,MAEI+E,EAAQC,YAA8BjG,EAAOsD,GAEnD,EAAmC4C,YAAc,CAC/CC,WAAYpB,EACZqB,QAASC,QAAQlB,GACjBQ,KAAM,aACNlG,MAAO,YAJT,mBAAOuF,EAAP,KAAgBsB,EAAhB,KAMMC,EAAiBC,cAqCnBnB,EAAWD,EAEXmB,GACsB,qBAAblB,IACTA,EAAWkB,EAAelB,UAI9B,IAAMoB,EAAuB,aAATpF,GAAgC,UAATA,EAErCsC,EAAaC,YAAS,GAAI5D,EAAO,CACrCgF,UACAK,WACAC,qBACAvB,SAGI2C,EAlIkB,SAAA/C,GACxB,IACE+C,EAIE/C,EAJF+C,QACA1B,EAGErB,EAHFqB,QACAK,EAEE1B,EAFF0B,SACAtB,EACEJ,EADFI,KAEI4C,EAAQ,CACZC,KAAM,CAAC,OAAQ5B,GAAW,UAAWK,GAAY,WAAYtB,GAAQ,OAAJ,OAAW8C,YAAW9C,KACvFtB,MAAO,CAAC,UAEV,OAAOqE,YAAeH,EAAOzD,EAA2BwD,GAuHxCK,CAAkBpD,GAClC,OAAoBqD,eAAMzD,EAAgBK,YAAS,CACjDqD,UAAW,OACX/B,UAAWgC,YAAKR,EAAQE,KAAM1B,GAC9BiC,cAAc,EACdC,aAAc9B,EACdD,SAAUA,EACVU,SAAU,KACVsB,UAAMC,EACN1B,QA7DkB,SAAA2B,GACd3B,GACFA,EAAQ2B,GAGNhB,GAAkBA,EAAeX,SACnCW,EAAeX,QAAQ2B,IAwDzBpG,OApDiB,SAAAoG,GACbpG,GACFA,EAAOoG,GAGLhB,GAAkBA,EAAepF,QACnCoF,EAAepF,OAAOoG,IA+CxB5D,WAAYA,EACZmB,IAAKA,GACJkB,EAAO,CACRwB,SAAU,CAAcC,cAAKtD,EAAiBP,YAAS,CACrD1C,UAAWA,EACX8D,QAASD,EACTI,eAAgBA,EAChBD,UAAWwB,EAAQjE,MACnB4C,SAAUA,EACVG,GAAIiB,GAAejB,EACnBG,KAAMA,EACN7E,SAtDsB,SAAAyG,GAExB,IAAIA,EAAMG,YAAYC,iBAAtB,CAIA,IAAMC,EAAaL,EAAMM,OAAO7C,QAChCsB,EAAgBsB,GAEZ9G,GAEFA,EAASyG,EAAOK,KA4ChB/B,SAAUA,EACVf,IAAKY,EACLI,SAAUA,EACVnC,WAAYA,EACZoC,SAAUA,EACV1E,KAAMA,GACI,aAATA,QAAiCiG,IAAVrG,EAAsB,GAAK,CACnDA,SACCwE,IAAcT,EAAUC,EAAcM,S,SC3K9BuC,cAA4BL,cAAK,OAAQ,CACtDM,EAAG,+FACD,wBCFWD,cAA4BL,cAAK,OAAQ,CACtDM,EAAG,wIACD,YCFWD,cAA4BL,cAAK,OAAQ,CACtDM,EAAG,kGACD,yB,QCRG,SAASC,EAAwB7E,GACtC,OAAOC,YAAqB,cAAeD,GAE7C,IACe8E,EADS5E,YAAuB,cAAe,CAAC,OAAQ,UAAW,WAAY,gBAAiB,eAAgB,mBCFzHC,GAAY,CAAC,cAAe,QAAS,OAAQ,gBAAiB,oBAAqB,aAAc,QA6BjG4E,GAAe1E,YAAOqB,EAAY,CACtCsD,kBAAmB,SAAAC,GAAI,OAAIC,YAAsBD,IAAkB,YAATA,GAC1DzC,KAAM,cACNxC,KAAM,OACNmF,kBAAmB,SAACtI,EAAOuI,GACzB,IACE5E,EACE3D,EADF2D,WAEF,MAAO,CAAC4E,EAAO3B,KAAMjD,EAAW6E,eAAiBD,EAAOC,cAAoC,YAArB7E,EAAW8E,OAAuBF,EAAO,QAAD,OAAS1B,YAAWlD,EAAW8E,YAR7HjF,EAUlB,kBACDkF,EADC,EACDA,MACA/E,EAFC,EAEDA,WAFC,OAGGC,YAAS,CACb6E,MAAOC,EAAMC,QAAQC,KAAKC,YACxBlF,EAAWmF,eAAiB,CAC9B,UAAW,CACTC,gBAAiBC,YAA2B,YAArBrF,EAAW8E,MAAsBC,EAAMC,QAAQM,OAAOC,OAASR,EAAMC,QAAQhF,EAAW8E,OAAOU,KAAMT,EAAMC,QAAQM,OAAOG,cAEjJ,uBAAwB,CACtBL,gBAAiB,iBAGC,YAArBpF,EAAW8E,QAAX,+BACKR,EAAgBjD,QADrB,eACmCiD,EAAgBO,eAAkB,CACpEC,MAAOC,EAAMC,QAAQhF,EAAW8E,OAAOU,OAFxC,0BAIKlB,EAAgB5C,UAAa,CACjCoD,MAAOC,EAAMC,QAAQM,OAAO5D,WAL7B,OASGgE,GAAkC5B,cAAK6B,EAAc,IAErDC,GAA2B9B,cAAK+B,EAA0B,IAE1DC,GAAwChC,cAAKiC,EAA2B,IAoK/DC,GAlKezJ,cAAiB,SAAkB0J,EAAS9E,GACxE,IAAI+E,EAAsBC,EAEpB9J,EAAQ+J,YAAc,CAC1B/J,MAAO4J,EACPjE,KAAM,gBAGR,EAQI3F,EAPFiF,mBADF,MACgBoE,GADhB,IAQIrJ,EANFyI,aAFF,MAEU,UAFV,IAQIzI,EALFuF,KAAMyE,OAHR,MAGmBT,GAHnB,IAQIvJ,EAJFwI,qBAJF,WAQIxI,EAHFiK,kBAAmBC,OALrB,MAK6CT,GAL7C,EAMEhE,EAEEzF,EAFFyF,WANF,EAQIzF,EADFiE,YAPF,MAOS,SAPT,EASM+B,EAAQC,YAA8BjG,EAAOsD,IAE7CiC,EAAOiD,EAAgB0B,EAAwBF,EAC/CC,EAAoBzB,EAAgB0B,EAAwBjF,EAE5DtB,EAAaC,YAAS,GAAI5D,EAAO,CACrCyI,QACAD,gBACAvE,SAGIyC,EA/EkB,SAAA/C,GACxB,IACE+C,EAGE/C,EAHF+C,QACA8B,EAEE7E,EAFF6E,cACAC,EACE9E,EADF8E,MAEI9B,EAAQ,CACZC,KAAM,CAAC,OAAQ4B,GAAiB,gBAA1B,eAAmD3B,YAAW4B,MAEhE0B,EAAkBrD,YAAeH,EAAOqB,EAAyBtB,GACvE,OAAO9C,YAAS,GAAI8C,EAASyD,GAqEbpD,CAAkBpD,GAClC,OAAoB8D,cAAKS,GAActE,YAAS,CAC9CvC,KAAM,WACNoE,WAAY7B,YAAS,CACnB,qBAAsB4E,GACrB/C,GACHF,KAAmBrF,eAAmBqF,EAAM,CAC1C6E,SAA0D,OAA/CP,EAAuBtE,EAAKvF,MAAMoK,UAAoBP,EAAuB5F,IAE1FgB,YAA0B/E,eAAmB+J,EAAmB,CAC9DG,SAAwE,OAA7DN,EAAwBG,EAAkBjK,MAAMoK,UAAoBN,EAAwB7F,IAEzGN,WAAYA,EACZmB,IAAKA,GACJkB,EAAO,CACRU,QAASA,QCrGE2D,GARW,SAAC,GAAD,IAAG5H,EAAH,EAAGA,MAAOD,EAAV,EAAUA,MAAV,OACxB,cAAC,GAAD,CACEA,MAAOA,EACPwC,UAASvC,EAAMxB,MACfH,SAAU2B,EAAM3B,YC0GLwJ,GAJkBC,YAAU,CAAEC,KAAM,cACjDC,SAvGe,SAAArI,GACf,IACMsI,EAAS,GAYf,MAboB,CAAC,WAAW,WAEpBC,SAAQ,SAAAC,GACbxI,EAAOwI,KACVF,EAAOE,GAAS,eAIlBxI,EAAOyI,QACN,4CAA4CC,KAAK1I,EAAOyI,SAEzDH,EAAOG,MAAQ,yBAEVH,IAwFwBH,EArFL,SAAC,GAA+B,IAA7BQ,EAA4B,EAA5BA,aACrB/I,EADiD,EAAdP,QACnCO,SACR,OACE,uBAAMgJ,SAAUD,EAAhB,UACE,wCAEG,IACD,cAACE,EAAA,EAAD,CACEtF,KAAK,WACL3C,YAAY,WACZiE,UAAW1E,EACX2I,QAAQ,gBAGZ,qDAEG,IACD,cAACD,EAAA,EAAD,CACEtF,KAAK,iBACLsB,UAAWoD,GACX7H,MAAM,sBAGV,iEAEE,8BACE,cAACyI,EAAA,EAAD,CACEtF,KAAK,4BACL3C,YAAY,yCACZiE,UAAW1E,EACX4I,WAAS,EACTC,QAAS,EACTF,QAAQ,gBAId,2DAEE,8BACE,cAACD,EAAA,EAAD,CACEtF,KAAK,SACL3C,YAAY,6BACZiE,UAAW1E,EACX4I,WAAS,EACTC,QAAS,EACTF,QAAQ,gBAId,4CAEE,8BACE,cAACD,EAAA,EAAD,CACEjI,YAAY,uBACZ2C,KAAK,UACLsB,UAAW1E,EACX4I,WAAS,EACTC,QAAS,EACTF,QAAQ,aATd,YAaG,IACD,6BACGjJ,OAAOC,QAAQF,GACbG,KAAI,SAACC,GAAD,OACH,+BACGA,EAAO,GADV,IAEE,cAAC6I,EAAA,EAAD,CAEEtF,KAAI,mBAAcvD,EAAO,IACzB6E,UAAW1E,EACX2I,QAAQ,YAHH9I,EAAO,eASxB,gD,wECjDSiJ,GA7CK,SAAC,GAA+E,IAA9E3J,EAA6E,EAA7EA,QAAShB,EAAoE,EAApEA,OAAQ4K,EAA4D,EAA5DA,gBAAiBC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,cAAkBxL,EAAY,kBACjG,EAA+BO,oBAAS,GAAxC,mBAAOC,EAAP,KAAgBC,EAAhB,KAOA,IAAKT,EAAMyB,QACT,OAAO,cAACgK,EAAA,EAAD,IAET,IACEC,EACE1L,EAAMyB,QADRiK,OAOF,OACE,qCACE,gCACE,qBAAKC,IAAKD,EAAOE,MAAQF,EAAOE,MAAQC,IAAQtH,MAAO,IAAKC,OAAQ,IAAKsH,IAAI,WAC5EpK,GAAW,uBAAOL,KAAM,OAAQP,SApBjB,SAACC,GACjBA,EAAE8G,OAAOkE,MAAMC,QACjBT,EAAYxK,EAAE8G,OAAOkE,MAAM,UAoBzB,yCACU,cAAC,EAAD,CACRrL,OAAQA,EAAQU,UAAWkK,OAG7B9K,EAAW,cAAC,GAAD,CACPyL,cAAejM,EAAMyB,QACrBA,QAASzB,EAAMyB,QACfuJ,SAnBO,SAACkB,GAChBV,EAAcU,GACdzL,GAAY,MAmBR,cAAC,EAAD,CACEgB,QAASzB,EAAMyB,QACfC,QAASA,EACTC,iBApCiB,kBAAMlB,GAAY,UCoB9B0L,GA1BFjM,IAAMkM,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAEzB,OADAC,QAAQC,IAAI,eAEV,8BACGF,OCaQG,GAJUjC,YAAU,CACjCC,KAAM,WADiBD,EAbL,SAAC,GAAsB,IAApBQ,EAAmB,EAAnBA,aACrB,OACE,uBAAMC,SAAUD,EAAhB,UACE,8BACE,cAACE,EAAA,EAAD,CAAOhE,UAAU,WAAWtB,KAAK,eAEnC,8BACE,yDCmBO8G,GAxBC,SAACzM,GACfsM,QAAQC,IAAI,kBACZ,IAIMG,EAJY1M,EAAM2M,YAAhBC,MAIsBzK,KAAI,SAAC0K,GAAD,OAAU,cAAC,GAAD,CAAMR,QAASQ,EAAKA,UAChE,OACE,gCACE,cAAC,GAAD,aAAa7B,SAND,SAAC,GAAkB,IAAhB8B,EAAe,EAAfA,SACjB9M,EAAM+M,QAAQD,KAKwB9M,IACnC0M,M,oBCGQM,qBACb7M,aAdsB,SAACV,GAAD,MAAY,CAClCkN,YAAalN,EAAMkN,gBAGM,SAACM,GAAD,MAAe,CACxCF,QAAS,SAACnE,GACRqE,EAASC,aAAUtE,KAErBuE,aAAc,SAACvE,GACbqE,EAASG,aAAoBxE,SAM/BhJ,KAFaoN,CAGbP,ICHaY,OAXf,YAA8B,IAATrN,EAAQ,oBAC3B,OACE,sBAAKkF,UAAWoI,IAAEC,QAAlB,UACE,cAAC,GAAD,eAAiBvN,IAEjB,cAACwN,GAAD,QCDAC,G,oKAEJ,WACE,IAAMC,EAAW3N,KAAKC,MAAM2N,MAAMC,OAA5BF,OACDA,IAAQA,EAAS3N,KAAKC,MAAMwF,IACjCzF,KAAKC,MAAM6N,aAAaH,GACxB3N,KAAKC,MAAM8N,gBAAgBJ,K,+BAG7B,WACE3N,KAAKgO,mB,gCAGP,SAAmBC,EAAWC,EAAWC,GACnCnO,KAAKC,MAAM2N,MAAMC,OAAOF,SAAWM,EAAUL,MAAMC,OAAOF,QAC5D3N,KAAKgO,mB,oBAIT,WACE,OACE,cAAC,GAAD,2BACMhO,KAAKC,OADX,IAEE0B,SAAU3B,KAAKC,MAAM2N,MAAMC,OAAOF,c,GAvBXxN,IAAML,WAmCtBmN,4BACb7M,aAPsB,SAAC,GAAD,IAAGwM,EAAH,EAAGA,YAAH,MAA4B,CAClDnH,GADsB,EAAgB7F,KAC7B6F,GACT/D,QAASkL,EAAYlL,QACrBf,OAAQiM,EAAYjM,UAIK,CACvByN,eAAgBC,KAChBP,kBACAC,qBACAxC,qBACAC,iBACAC,qBAEF5L,KACAyO,IAVarB,CAWbS","file":"static/js/6.465a7ab8.chunk.js","sourcesContent":["/* eslint-disable */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth\n})\n\nconst withAuthComponent = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\n      return <Component {...this.props} />;\n    }\n  }\n  const ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\n  return ConnectedAuthRedirectComponent;\n};\n\nexport default withAuthComponent;\n","export default __webpack_public_path__ + \"static/media/avatar.f0ed1e1e.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__1qUN5\"};","/* eslint-disable */\nimport React, { useEffect, useState } from 'react';\n\nconst ProfileStatusHooks = (props) => {\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status);\n  useEffect(() => {\n    setStatus(props.status)\n  }, [props.status])\n  const activateEditMode = () => {\n    setEditMode(true);\n  }\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.putStatus(status);\n  }\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  }\n  return <>\n    {!editMode && <span\n      onDoubleClick={activateEditMode}>{props.status}\n    </span>\n    }\n\n    {editMode && <input\n      onChange={onStatusChange}\n      autoFocus={true}\n      onBlur={deactivateEditMode}\n      type=\"text\"\n      value={status}\n    />\n    }\n  </>\n}\n\n\n\nexport default ProfileStatusHooks;\n","/* eslint-disable */\nimport React from 'react';\n\nconst UserContacts = ({title,value = 'not information'}) => {\n  return <div>\n    <p>\n      {title}: {value}\n    </p>\n  </div>\n}\n\nexport default UserContacts;\n","/* eslint-disable */\nimport React from 'react';\nimport { Button } from '@mui/material';\nimport UserContacts from '../../../UserContacts/UserContacts';\n\nconst ProfileDataInfo = ({ profile, isOwner, activateEditMode }) => {\n  const {\n    fullName, aboutMe,\n    lookingForAJob,\n    lookingForAJobDescription,\n    contacts,\n  } = profile;\n  return (\n    <>\n      <p>\n        Name:\n        {fullName}\n      </p>\n      <p>\n        Obout me:\n        {aboutMe}\n      </p>\n      <p>\n        Looking for a job:\n        {' '}\n        {lookingForAJob ? 'yes' : 'no'}\n      </p>\n      {lookingForAJob && (\n      <p>\n        My professionals skills:\n        {' '}\n        {lookingForAJobDescription}\n      </p>\n      )}\n      <div>\n        Contacts:\n        {' '}\n        {Object.entries(contacts).map((values) => {\n          if (values[1]) {\n            return (\n              <UserContacts\n                key={values[0]}\n                title={values[0]}\n                value={values[1]}\n              />\n            );\n          }\n          return null;\n        })}\n      </div>\n      {isOwner && <Button onClick={activateEditMode}>Edit profile</Button>}\n    </>\n  );\n};\n\nexport default ProfileDataInfo;\n","/* eslint-disable */\nimport { TextField } from '@mui/material';\n\nconst TextFieldComponent = ({\n  label,\n  input,\n  meta: { touched, invalid, error },\n  ...custom\n}) => (\n  <TextField\n    label={label}\n    placeholder={label}\n    error={touched && invalid}\n    helperText={touched && error}\n    {...input}\n    {...custom}\n  />\n)\nexport default TextFieldComponent;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nconst SwitchBaseRoot = styled(ButtonBase, {\n  skipSx: true\n})(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input', {\n  skipSx: true\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","/* eslint-disable */\nimport { Checkbox } from '@mui/material';\n\nconst CheckboxComponent = ({ input, label }) => (\n  <Checkbox\n    label={label}\n    checked={input.value ? true : false}\n    onChange={input.onChange}\n  />\n);\n\nexport default CheckboxComponent;\n","/* eslint-disable */\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport TextFieldComponent from '../../../ReduxFormMU/TextFieldComponent';\nimport CheckboxComponent from '../../../ReduxFormMU/CheckboxComponent';\n\n\nconst validate = values => {\n  const validateArr = ['fullName','aboutMe']\n  const errors = {}\n  validateArr.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required'\n    }\n  })\n  if (\n    values.email &&\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n  ) {\n    errors.email = 'Invalid email address'\n  }\n  return errors\n};\n\nconst ProfileDataInfoForm = ({ handleSubmit, profile }) => {\n  const { contacts } = profile;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        name:\n        {' '}\n        <Field\n          name=\"fullName\"\n          placeholder=\"fullName\"\n          component={TextFieldComponent}\n          variant=\"standard\"\n        />\n      </div>\n      <div>\n        Looking for a job:\n        {' '}\n        <Field\n          name=\"lookingForAJob\"\n          component={CheckboxComponent}\n          label=\"lookingForAJob\"\n        />\n      </div>\n      <div>\n        Looking for a job description:\n        <div>\n          <Field\n            name=\"lookingForAJobDescription\"\n            placeholder=\"who are you according to the horoscope\"\n            component={TextFieldComponent}\n            multiline\n            minRows={3}\n            variant=\"filled\"\n          />\n        </div>\n      </div>\n      <div>\n        My professionals skills:\n        <div>\n          <Field\n            name=\"skills\"\n            placeholder=\"enter professionals skills\"\n            component={TextFieldComponent}\n            multiline\n            minRows={3}\n            variant=\"filled\"\n          />\n        </div>\n      </div>\n      <div>\n        About me:\n        <div>\n          <Field\n            placeholder=\"write about yourself\"\n            name=\"aboutMe\"\n            component={TextFieldComponent}\n            multiline\n            minRows={3}\n            variant=\"filled\"\n          />\n        </div>\n        Contacts:\n        {' '}\n        <ul>\n          {Object.entries(contacts)\n            .map((values) => (\n              <li>\n                {values[0]}:\n                <Field\n                  key={values[0]}\n                  name={`contacts.${values[0]}`}\n                  component={TextFieldComponent}\n                  variant=\"standard\"\n                />\n              </li>\n            ))}\n        </ul>\n      </div>\n      <button>Save</button>\n    </form>\n  );\n};\n\n\n\nconst ProfileDataInfoReduxForm = reduxForm({ form: 'editProfile',\n  validate,\n})(ProfileDataInfoForm);\n\nexport default ProfileDataInfoReduxForm;\n","/* eslint-disable */\nimport React, { useState } from 'react';\nimport avatar from '../../../assets/images/avatar.png';\nimport Preloader from '../../preloader/Preloader';\nimport ProfileStatusHooks from './ProfileStatus/ProfileStatusHooks';\nimport ProfileDataInfo from './ProfileDataInfo/ProfileDataInfo';\nimport ProfileDataInfoForm from './ProfileDataInfoForm/ProfileDataInfoForm';\n\nconst ProfileData = ({isOwner, status, putUserStatusTC, savePhotoTC, saveProfileTC, ...props }) => {\n  const [editMode,setEditMode] = useState(false);\n  const activateEditMode = () => setEditMode(true);\n  const photoSelected = (e) => {\n    if (e.target.files.length) {\n      savePhotoTC(e.target.files[0]);\n    }\n  }\n  if (!props.profile) {\n    return <Preloader />\n  }\n  const {\n    photos\n  } = props.profile;\n  const onSubmit = (formData) => {\n    saveProfileTC(formData);\n    setEditMode(false);\n  }\n\n  return (\n    <>\n      <div>\n        <img src={photos.large ? photos.large : avatar} width={150} height={150} alt=\"avatar\" />\n        {isOwner && <input type={'file'} onChange={photoSelected}/>}\n      </div>\n        <p>\n          Status: <ProfileStatusHooks\n          status={status} putStatus={putUserStatusTC} />\n        </p>\n      {\n        editMode ? <ProfileDataInfoForm\n            initialValues={props.profile}\n            profile={props.profile}\n            onSubmit={onSubmit}\n          /> :\n        <ProfileDataInfo\n          profile={props.profile}\n          isOwner={isOwner}\n          activateEditMode={activateEditMode}\n        />\n      }\n    </>\n  );\n};\n\nexport default ProfileData;\n","/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Post = React.memo(({ message }) => {\n  console.log('render Post');\n  return (\n    <div>\n      {message}\n    </div>\n  );\n})\n\nPost.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n// function Post({ message }) {\n//   console.log('render Post');\n//   return (\n//     <div>\n//       {message}\n//     </div>\n//   );\n// }\n\n// Post.propTypes = {\n//   message: PropTypes.string.isRequired,\n// };\n\n\nexport default Post;\n","/* eslint-disable */\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nconst AddPostForm = ({ handleSubmit }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field component=\"textarea\" name=\"postText\" />\n      </div>\n      <div>\n        <button>add message</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddPostReduxForm = reduxForm({\n  form: 'addPost',\n})(AddPostForm);\n\nexport default AddPostReduxForm;\n","/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post/Post';\nimport AddPostForm from './AddPostForm/AddPostForm';\n\nconst MyPosts = (props) => {\n  console.log('render MyPosts');\n  const { posts } = props.profilePage;\n  const addPost = ({ postText }) => {\n    props.addPost(postText);\n  };\n  const postsComponents = posts.map((post) => <Post message={post.post} />);\n  return (\n    <div>\n      <AddPostForm onSubmit={addPost} {...props} />\n      {postsComponents}\n    </div>\n  );\n};\n\nMyPosts.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    post: PropTypes.string.isRequired,\n  })).isRequired,\n  addPost: PropTypes.func.isRequired,\n  updateNewPostText: PropTypes.func.isRequired,\n};\n\nexport default MyPosts;\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport MyPosts from './MyPosts';\nimport { addPostAC, updateNewPostTextAC } from '../../../redux/profileReducer';\nimport withAuthComponent from '../../../HOC/withAuthRedirect';\n\nconst mapStateToProps = (state) => ({\n  profilePage: state.profilePage,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addPost: (text) => {\n    dispatch(addPostAC(text));\n  },\n  onPostChange: (text) => {\n    dispatch(updateNewPostTextAC(text));\n  },\n});\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthComponent,\n)(MyPosts);\n","/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport P from './Profile.module.css';\nimport ProfileData from './ProfileInfo/ProfileData';\nimport PostsContainer from './MyPosts/PostsContainer';\nimport { savePhotoTC } from '../../redux/profileReducer';\n//todo: добавить загрузку своего профиля\nfunction Profile({...props}) {\n  return (\n    <div className={P.content}>\n      <ProfileData {...props}\n      />\n      <PostsContainer />\n    </div>\n  );\n}\n\n\nexport default Profile;\n","/* eslint-disable */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { compose } from 'redux';\nimport Profile from './Profile';\nimport {\n  getProfileTC, setUserProfileAC,\n  getUserStatusTC, putUserStatusTC, savePhotoTC, saveProfileTC,\n} from '../../redux/profileReducer';\nimport withAuthComponent from '../../HOC/withAuthRedirect';\n\nclass ProfileContainer extends React.Component {\n  // todo: пофиксить баг со статусом\n  refreshProfile() {\n    let { userId } = this.props.match.params;\n    if (!userId) userId = this.props.id;\n    this.props.getProfileTC(userId);\n    this.props.getUserStatusTC(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return (\n      <Profile\n        {...this.props}\n        isOwner={!this.props.match.params.userId}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = ({ profilePage, auth }) => ({\n  id: auth.id,\n  profile: profilePage.profile,\n  status: profilePage.status,\n});\n\nexport default compose(\n  connect(mapStateToProps, {\n    setUserProfile: setUserProfileAC,\n    getProfileTC,\n    getUserStatusTC,\n    putUserStatusTC,\n    savePhotoTC,\n    saveProfileTC,\n  }),\n  withAuthComponent,\n  withRouter,\n)(ProfileContainer);\n"],"sourceRoot":""}